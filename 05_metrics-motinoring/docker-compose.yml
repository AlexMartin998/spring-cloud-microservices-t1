version: '3.9'

services:
  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411

  prometheus:
    image: prom/prometheus:v2.47.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus

    # spring app in HOST and prometheus in Docker
    network_mode: host

    ports:
      - 9090:9090
    restart: always

  grafana:
    image: grafana/grafana:9.5.10
    user: '472'
    depends_on:
      - prometheus

    # spring app in HOST and grafana in Docker
    network_mode: host

    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always

  # ### Caching with Redis
  redis:
    image: redis:7.2-alpine
    ports:
      - 6379:6379

  # ### Message Broker
  kafka:
    image: bitnami/kafka:3.5.1
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

volumes:
  prometheus_data: {}
  grafana_data: {}
  kafka_data: {}
